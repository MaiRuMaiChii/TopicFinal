import { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { collection, getDocs, doc, deleteDoc } from "firebase/firestore";
import { Recipe } from "./type";
import { db } from "./firebase";
import "./styles.css";

const ListMenu = () => {
  const [recipes, setRecipes] = useState<Recipe[]>([]);
  const [loading, setLoading] = useState<boolean>(true);

  const fetchRecipes = async () => {
    setLoading(true);
    try {
      const querySnapshot = await getDocs(collection(db, "recipes"));
      const recipeList = querySnapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      setRecipes(recipeList as Recipe[]);
      console.log("Fetched recipes:", recipeList);
    } catch (error) {
      console.error("Error fetching recipes:", error);
    } finally {
      setLoading(false);
    }
  };

  const handleDelete = async (id: string) => {
    const isConfirmed = window.confirm("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
    if (isConfirmed) {
      try {
        const recipeDoc = doc(db, "recipes", id);
        await deleteDoc(recipeDoc); // üî• ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Firestore
        console.log(`Deleted recipe with id: ${id}`);

        // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å UI ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        setRecipes((prevRecipes) => prevRecipes.filter((recipe) => recipe.id !== id));

        alert("‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      } catch (error: any) {
        console.error("Error deleting recipe:", error.message);
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π: ${error.message}`);
      }
    }
  };

  useEffect(() => {
    fetchRecipes();
  }, []);

  if (loading) {
    return <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
  }

  return (
    <div className="list-menu-container">
      <header className="header">
        <nav>
          <Link to="/" className="nav-btn home-btn">Home</Link>
          <Link to="/add-recipe" className="add-recipe-btn">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£</Link>
        </nav>
      </header>

      <div className="recipe-list">
        <h1>‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h1>
        {recipes.length === 0 ? (
          <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</p>
        ) : (
          recipes.map((recipe) => (
            <div key={recipe.id} className="recipe-item">
              <h2>{recipe.title}</h2>
              <img src={recipe.imageUrl} alt={recipe.title} className="recipe-image" />
              <p>{recipe.description}</p>
              <div className="recipe-actions">
                <Link to={`/recipe/${recipe.id}`} className="view-btn">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</Link>
                <button onClick={() => handleDelete(recipe.id)} className="delete-btn">‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π</button>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  );
};

export default ListMenu;
